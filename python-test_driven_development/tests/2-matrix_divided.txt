The ``matrix_divided`` module
======================

Using ``matrix_divided``
-------------------
First import ``matrix_divided`` from the ``2-matrix_divided`` file:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests:

    Test - matrix is a list of integers
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    Test - matrix is a list of floats
    >>> matrix_divided([[1.2, 2.6, 3.3], [4.2, 5.7, 6.33]], 3)
    [[0.4, 0.87, 1.1], [1.4, 1.9, 2.11]]

    Test - matrix is a list of integers and floats
    >>> matrix_divided([[1, 2, 3], [4.2, 5, 6.33]], 3)
    [[0.33, 0.67, 1.0], [1.4, 1.67, 2.11]]

    Test - the row of matrix is the same size
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Test - the row of matrix is the different size
    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    Test - the div is equal to zero
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    Test - the div is not an integer or a float
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "hey")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
